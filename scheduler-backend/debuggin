private void updateCampaignAfterSelection(CampaignMapping campaign, Date currentDate) {
  try {
      log.info("Starting update for campaign ID: {}", campaign.getId());
      
      // Get a fresh copy of the campaign from the database
      CampaignMapping freshCampaign = campaignRepository.findById(campaign.getId())
              .orElseThrow(() -> new RuntimeException("Campaign not found: " + campaign.getId()));
      
      // Set only the essential fields
      if (freshCampaign.getFrequencyPerWeek() != null) {
          freshCampaign.setFrequencyPerWeek(Math.max(0, freshCampaign.getFrequencyPerWeek() - 1));
      }
      
      if (freshCampaign.getDisplayCapping() != null) {
          freshCampaign.setDisplayCapping(Math.max(0, freshCampaign.getDisplayCapping() - 1));
      }
      
      freshCampaign.setUpdatedDate(currentDate);
      freshCampaign.setVisibility("VISIBLE");
      
      // Save the fresh campaign
      campaignRepository.save(freshCampaign);
      log.info("Campaign updated successfully");
      
  } catch (Exception e) {
      log.error("Error updating campaign: {}", e.getMessage(), e);
      // Don't throw the exception - let the process continue
  }
}